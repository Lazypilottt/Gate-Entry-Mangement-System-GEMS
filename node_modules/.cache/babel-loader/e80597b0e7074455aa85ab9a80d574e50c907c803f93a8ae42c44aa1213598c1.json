{"ast":null,"code":"var _jsxFileName = \"/Users/lazypilot/Desktop/Lazypilot/IIT Bhilai/Acad/CSP203/gems1/Gate-Entry-Mangement-System-GEMS/src/components/pages/logout.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'; // useHistory hook to handle redirection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Logout() {\n  _s();\n  const history = useHistory();\n  useEffect(() => {\n    // Simulate logout by clearing session/local storage or any other logout logic\n    localStorage.removeItem('user'); // Example for clearing user data\n    sessionStorage.removeItem('user'); // If you store user data in sessionStorage\n\n    // Redirect to the admin login page after 5 seconds\n    const timer = setTimeout(() => {\n      history.push('/admin-login'); // Replace with your actual admin login route\n    }, 5000);\n\n    // Cleanup the timer when the component is unmounted\n    return () => clearTimeout(timer);\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logout-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"You have been logged out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Redirecting to admin login page...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(Logout, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useEffect","useHistory","jsxDEV","_jsxDEV","Logout","_s","history","localStorage","removeItem","sessionStorage","timer","setTimeout","push","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lazypilot/Desktop/Lazypilot/IIT Bhilai/Acad/CSP203/gems1/Gate-Entry-Mangement-System-GEMS/src/components/pages/logout.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'; // useHistory hook to handle redirection\n\nfunction Logout() {\n    const history = useHistory();\n\n    useEffect(() => {\n        // Simulate logout by clearing session/local storage or any other logout logic\n        localStorage.removeItem('user');  // Example for clearing user data\n        sessionStorage.removeItem('user'); // If you store user data in sessionStorage\n\n        // Redirect to the admin login page after 5 seconds\n        const timer = setTimeout(() => {\n            history.push('/admin-login');  // Replace with your actual admin login route\n        }, 5000);\n\n        // Cleanup the timer when the component is unmounted\n        return () => clearTimeout(timer);\n    }, [history]);\n\n    return (\n        <div className=\"logout-container\">\n            <h2>You have been logged out!</h2>\n            <p>Redirecting to admin login page...</p>\n        </div>\n    );\n}\n\nexport default Logout;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,UAAU,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,OAAO,GAAGL,UAAU,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACZ;IACAO,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAE;IAClCC,cAAc,CAACD,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;;IAEnC;IACA,MAAME,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC3BL,OAAO,CAACM,IAAI,CAAC,cAAc,CAAC,CAAC,CAAE;IACnC,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,YAAY,CAACH,KAAK,CAAC;EACpC,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,oBACIH,OAAA;IAAKW,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BZ,OAAA;MAAAY,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClChB,OAAA;MAAAY,QAAA,EAAG;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEd;AAACd,EAAA,CAvBQD,MAAM;EAAA,QACKH,UAAU;AAAA;AAAAmB,EAAA,GADrBhB,MAAM;AAyBf,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}