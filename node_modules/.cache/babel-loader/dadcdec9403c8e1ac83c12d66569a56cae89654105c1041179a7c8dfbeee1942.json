{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AdminLogin(){const[formData,setFormData]=useState({id:'',password:''});const[error,setError]=useState('');const navigate=useNavigate();// To navigate after successful login\nconst handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleSubmit=e=>{e.preventDefault();// Simulating admin authentication (You can replace this with an API call)\nconst{id,password}=formData;if(id==='admin'&&password==='admin123'){// Replace with real validation\n// Clear error and redirect to dashboard or any other page\nsetError('');navigate('/dashboard');// Redirect to a dashboard page (create this route)\n}else{setError('Invalid ID or Password');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"id\",children:\"Admin ID:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"id\",name:\"id\",value:formData.id,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error})]});}export default AdminLogin;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","AdminLogin","formData","setFormData","id","password","error","setError","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","className","children","onSubmit","htmlFor","type","onChange","required","style","color"],"sources":["/Users/lazypilot/Desktop/Lazypilot/IIT Bhilai/Acad/CSP203/gems1/Gate-Entry-Mangement-System-GEMS/src/components/pages/admin-login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AdminLogin() {\n    const [formData, setFormData] = useState({\n        id: '',\n        password: ''\n    });\n    const [error, setError] = useState('');\n    const navigate = useNavigate();  // To navigate after successful login\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // Simulating admin authentication (You can replace this with an API call)\n        const { id, password } = formData;\n        if (id === 'admin' && password === 'admin123') {  // Replace with real validation\n            // Clear error and redirect to dashboard or any other page\n            setError('');\n            navigate('/dashboard');  // Redirect to a dashboard page (create this route)\n        } else {\n            setError('Invalid ID or Password');\n        }\n    };\n\n    return (\n        <div className=\"admin-login-container\">\n            <h2>Admin Login</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"id\">Admin ID:</label>\n                    <input\n                        type=\"text\"\n                        id=\"id\"\n                        name=\"id\"\n                        value={formData.id}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        value={formData.password}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <button type=\"submit\">Login</button>\n            </form>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n        </div>\n    );\n}\n\nexport default AdminLogin;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,UAAUA,CAAA,CAAG,CAClB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,CACrCS,EAAE,CAAE,EAAE,CACNC,QAAQ,CAAE,EACd,CAAC,CAAC,CACF,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAa,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAAG;AAEjC,KAAM,CAAAa,YAAY,CAAIC,CAAC,EAAK,CACxB,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAChCV,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAE,CAACS,IAAI,EAAGC,KAAM,CAAC,CAAC,CAC/C,CAAC,CAED,KAAM,CAAAE,YAAY,CAAIJ,CAAC,EAAK,CACxBA,CAAC,CAACK,cAAc,CAAC,CAAC,CAElB;AACA,KAAM,CAAEX,EAAE,CAAEC,QAAS,CAAC,CAAGH,QAAQ,CACjC,GAAIE,EAAE,GAAK,OAAO,EAAIC,QAAQ,GAAK,UAAU,CAAE,CAAG;AAC9C;AACAE,QAAQ,CAAC,EAAE,CAAC,CACZC,QAAQ,CAAC,YAAY,CAAC,CAAG;AAC7B,CAAC,IAAM,CACHD,QAAQ,CAAC,wBAAwB,CAAC,CACtC,CACJ,CAAC,CAED,mBACIP,KAAA,QAAKgB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAClCnB,IAAA,OAAAmB,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBjB,KAAA,SAAMkB,QAAQ,CAAEJ,YAAa,CAAAG,QAAA,eACzBjB,KAAA,QAAAiB,QAAA,eACInB,IAAA,UAAOqB,OAAO,CAAC,IAAI,CAAAF,QAAA,CAAC,WAAS,CAAO,CAAC,cACrCnB,IAAA,UACIsB,IAAI,CAAC,MAAM,CACXhB,EAAE,CAAC,IAAI,CACPO,IAAI,CAAC,IAAI,CACTC,KAAK,CAAEV,QAAQ,CAACE,EAAG,CACnBiB,QAAQ,CAAEZ,YAAa,CACvBa,QAAQ,MACX,CAAC,EACD,CAAC,cACNtB,KAAA,QAAAiB,QAAA,eACInB,IAAA,UAAOqB,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,WAAS,CAAO,CAAC,cAC3CnB,IAAA,UACIsB,IAAI,CAAC,UAAU,CACfhB,EAAE,CAAC,UAAU,CACbO,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEV,QAAQ,CAACG,QAAS,CACzBgB,QAAQ,CAAEZ,YAAa,CACvBa,QAAQ,MACX,CAAC,EACD,CAAC,cACNxB,IAAA,WAAQsB,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,OAAK,CAAQ,CAAC,EAClC,CAAC,CACNX,KAAK,eAAIR,IAAA,MAAGyB,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAP,QAAA,CAAEX,KAAK,CAAI,CAAC,EAChD,CAAC,CAEd,CAEA,cAAe,CAAAL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}