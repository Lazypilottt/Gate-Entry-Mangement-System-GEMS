{"ast":null,"code":"var _jsxFileName = \"/Users/agastyanath/agastya/csp203-proj/Gate-Entry-Mangement-System-GEMS_7/Gate-Entry-Mangement-System-GEMS/src/components/pages/logout.js\",\n  _s = $RefreshSig$();\n// Logout.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from './Modal'; // Import the modal component\nimport './logout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Logout() {\n  _s();\n  const navigate = useNavigate();\n  const [isModalOpen, setIsModalOpen] = useState(true); // Track if the modal is open\n\n  const darkModeToggle = document.getElementById('darkModeToggle');\n  const body = document.body;\n  darkModeToggle.addEventListener('change', () => {\n    body.classList.toggle('dark-mode', darkModeToggle.checked);\n  });\n\n  // This will be triggered when the user confirms logout\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    sessionStorage.removeItem('user');\n    navigate('/admin-login'); // Immediately navigate to the admin login page\n  };\n  const handleConfirmLogout = () => {\n    setIsModalOpen(false); // Close the modal\n    handleLogout(); // Proceed with logout\n  };\n  const handleCancelLogout = () => {\n    setIsModalOpen(false); // Close the modal\n    navigate('/'); // Navigate to the home page if logout is canceled\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logout-container\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCancelLogout,\n      onConfirm: handleConfirmLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logout-message\",\n        children: \"Logging out...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"redirect-message\",\n        children: \"You will be redirected to the admin login page shortly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Logout, \"bDmYXEvI4E7ta55M/GcH4CJVyv0=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useState","useNavigate","Modal","jsxDEV","_jsxDEV","Logout","_s","navigate","isModalOpen","setIsModalOpen","darkModeToggle","document","getElementById","body","addEventListener","classList","toggle","checked","handleLogout","localStorage","removeItem","sessionStorage","handleConfirmLogout","handleCancelLogout","className","children","isOpen","onClose","onConfirm","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/agastyanath/agastya/csp203-proj/Gate-Entry-Mangement-System-GEMS_7/Gate-Entry-Mangement-System-GEMS/src/components/pages/logout.js"],"sourcesContent":["// Logout.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from './Modal'; // Import the modal component\nimport './logout.css'; \n\nfunction Logout() {\n  const navigate = useNavigate();\n  const [isModalOpen, setIsModalOpen] = useState(true); // Track if the modal is open\n\n  const darkModeToggle = document.getElementById('darkModeToggle');\n  const body = document.body;\n\n  darkModeToggle.addEventListener('change', () => {\n    body.classList.toggle('dark-mode', darkModeToggle.checked);\n  });\n\n  // This will be triggered when the user confirms logout\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    sessionStorage.removeItem('user');\n    navigate('/admin-login'); // Immediately navigate to the admin login page\n  };\n\n  const handleConfirmLogout = () => {\n    setIsModalOpen(false); // Close the modal\n    handleLogout(); // Proceed with logout\n  };\n\n  const handleCancelLogout = () => {\n    setIsModalOpen(false); // Close the modal\n    navigate('/'); // Navigate to the home page if logout is canceled\n  };\n\n  return (\n    <div className=\"logout-container\">\n      <Modal \n        isOpen={isModalOpen} \n        onClose={handleCancelLogout} \n        onConfirm={handleConfirmLogout} \n      />\n      <div className=\"message-container\">\n        <h2 className=\"logout-message\">Logging out...</h2>\n        <p className=\"redirect-message\">You will be redirected to the admin login page shortly.</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Logout;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,SAAS,CAAC,CAAC;AAC7B,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtD,MAAMU,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;EAChE,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI;EAE1BH,cAAc,CAACI,gBAAgB,CAAC,QAAQ,EAAE,MAAM;IAC9CD,IAAI,CAACE,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEN,cAAc,CAACO,OAAO,CAAC;EAC5D,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/BC,cAAc,CAACD,UAAU,CAAC,MAAM,CAAC;IACjCb,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMe,mBAAmB,GAAGA,CAAA,KAAM;IAChCb,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IACvBS,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;IAC/Bd,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IACvBF,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACEH,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BrB,OAAA,CAACF,KAAK;MACJwB,MAAM,EAAElB,WAAY;MACpBmB,OAAO,EAAEJ,kBAAmB;MAC5BK,SAAS,EAAEN;IAAoB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACF5B,OAAA;MAAKoB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCrB,OAAA;QAAIoB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClD5B,OAAA;QAAGoB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAuD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1B,EAAA,CAzCQD,MAAM;EAAA,QACIJ,WAAW;AAAA;AAAAgC,EAAA,GADrB5B,MAAM;AA2Cf,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}